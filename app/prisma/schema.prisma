generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          Int          @id @default(autoincrement())
  name        String       @default("Superuser")
  email       String       @unique //@default("superuser@gmail.com")
  password    String
  role        String       @default("Superuser")
  ImageId     String?      
  permissions  UserPermission[] // Relacionamento com Permission
   logs           Log[]
}

model Module {
  id            Int          @id @default(autoincrement())
  name          String       @unique
  permissions   UserPermission[] // Relacionamento com Permission
}

model UserPermission {
  @@id([moduleId,userId])
  moduleId  Int
  userId    Int
  user      User     @relation(fields: [userId], references: [id]) // Relação com User
  module    Module   @relation(fields: [moduleId], references: [id]) // Relação com Module
}

model Log{
  id       Int      @id @default(autoincrement())
  description  String
  userId   Int
  user User         @relation(fields: [userId], references:[id])
}





//-----------------------------------------------------------------------------------
// // This is your Prisma schema file,
// // learn more about it in the docs: https://pris.ly/d/prisma-schema

// // Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// // Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "sqlite"
//   url      = "file:../dados.db"
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   name    String?
//   email   String   @unique
//   role    String   // @default("USER")
//   password String
//   posts    Post[]
//   comments Comment[]
// }

// model Post {
//   id       Int      @id @default(autoincrement())
//   message  String
//   authorId Int
//   author   User     @relation(fields: [authorId], references: [id])
//   createdAt DateTime @default(now())

//   imageId String?

//   comments Comment[]

//   //nome customizado
//   @@map("posts")  

// } 

// model Comment {
//   id      Int      @id @default(autoincrement())
//   message String
  
//   userId  Int
//   user    User     @relation(fields: [userId], references: [id])
  
//   postId  Int
//   post    Post     @relation(fields: [postId], references: [id])
  
//   createdAt DateTime @default(now())
// }

// ========================================================================= 
// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
// }

// model User {
//   id       Int      @id @default(autoincrement())
//   username String   @unique
//   password String
//   role     String   // superuser, admin, user
//   image    String?  // Caminho para o upload
//   permissions Permission[]

//   AccessLog AccessLog[]
// }

// model Module {
//   id   Int    @id @default(autoincrement())
//   name String @unique

//   Permission Permission[]
// }

// model Permission {
//   id       Int    @id @default(autoincrement())
//   userId   Int
//   moduleId Int
//   user     User   @relation(fields: [userId], references: [id])
//   module   Module @relation(fields: [moduleId], references: [id])
// }

// model AccessLog {
//   id       Int      @id @default(autoincrement())
//   userId   Int
//   url      String
//   status   String // "granted" ou "denied"
//   createdAt DateTime @default(now())
//   user     User     @relation(fields: [userId], references: [id])
// }
